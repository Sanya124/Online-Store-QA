import requests
from faker import Faker
import random

fake = Faker()


def generate_password():
    """
   Generates and returns random generated password.
   Args:  None


   Returns:
    str: random length password in range 8-49  that contain least 1 letters, digits,special char ="!@%*$".


   """
    length = random.randint(8, 49)
    letters = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
    digits = "0123456789"
    special_chars = "!@%*$&"
    # special_chars = "/#â„–_+=-"
    all_chars = digits + special_chars + letters
    password = ''.join(random.choice(all_chars) for _ in range(length))

    """Digits and letters is required char in password. This statement add 1 digits and letter to the password" \
    if it absent during generation random password """
    if all(char not in digits for char in password):
        random_index = random.randint(0, length - 1)
        password = password[:random_index] + random.choice(digits) + password[random_index:]
    if all(char not in letters for char in password):
        random_index = random.randint(0, length - 1)
        password = password[:random_index] + random.choice(letters) + password[random_index:]

    return password


def generate_user_data() -> dict:
    """Generates and returns fake user data.
           Args: None
   Returns:
    dict: Dictionary containing the generated fake user first name,
    last name, email address, password (generated by function generate_password())."""

    return {
        "firstName": fake.first_name(),
        "lastName": f"{fake.last_name()}test",
        "password": generate_password(),
        "email": fake.email(),
    }
